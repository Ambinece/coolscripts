local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

local hitbox = Instance.new("Part")
hitbox.Size = Vector3.new(25, 75, 25)
hitbox.Anchored = true
hitbox.CanCollide = false
hitbox.Transparency = 1
hitbox.Parent = Character
hitbox.CastShadow = false
hitbox.Name = "Hitbox"

local debounce = {}

local function attackPlayer(player)
    if not debounce[player] then
        debounce[player] = true  -- Set debounce

        local targetHRP = player.Character:FindFirstChild("HumanoidRootPart")
        if targetHRP then
            local args = {
                [1] = targetHRP.CFrame,
                [2] = 150,
                [3] = 5,
                [4] = 5,
                [5] = 35,
                [6] = ReplicatedStorage.gaster.Saw,
                [7] = 410625063,
                [8] = 1,
                [9] = 2,
                [10] = targetHRP,
                [11] = 2
            }
            
            local remote = ReplicatedStorage:WaitForChild("newremotes"):FindFirstChild("CreateProjectile")
            if remote then
                remote:FireServer(unpack(args))
            end
        end
        
        task.delay(0.5, function()
            debounce[player] = nil
        end)
    end
end

local function updateHitboxPosition()
    hitbox.CFrame = HumanoidRootPart.CFrame
end

hitbox.Touched:Connect(function(hit)
    local character = hit.Parent
    local player = Players:GetPlayerFromCharacter(character)
    if player and player ~= LocalPlayer then
        attackPlayer(player)
    end
end)

RunService.Heartbeat:Connect(updateHitboxPosition)
